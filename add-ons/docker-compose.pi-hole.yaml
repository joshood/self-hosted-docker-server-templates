#This compose file adds pi-hole network ad blocker https://pi-hole.net/ to your stack
#Please note that this file is for x86-64 arch only!  Pi hole put their ARM builds in a different repository
#diginc/pi-hole-multiarch

#************************************************************************************************************#
#THIS SERVICE, BY VIRTUE OF ACTING AS A DNS SERVER REQUIRES THE HOST SYSTEM HAVE A STATIC IP ADDRESS ON YOUR #
#NETWORK!!! DO NOT USE THIS IF THE PC HOSTING IT DOES NOT HAVE A STATIC IP ADDRESS ON YOUR NETWORK!!!  IT    #
#WILL NOT WORK!!!                                                                                            #
#************************************************************************************************************#

version: '3.5'
services:
  reverse-proxy:
    networks:
      - pihole
  mail-relay:
    networks:
      - pihole
  pihole:
    image:  pihole/pihole:latest
    container_name: pihole
    dns:
      - 127.0.0.1
      - 1.1.1.1
    environment:
      TZ: ${TZ} #default is UTC
      DNS1: 1.1.1.1 #8.8.8.8 is the default value
      DNS2: 1.0.0.1 #8.8.4.4 is the default value
      WEBPASSWORD: ${PI_HOLE_ADMIN_PASSWORD:?Please copy template.env to .env and provide provide a value for PI_HOLE_ADMIN_PASSWORD}
      ServerIP: ${PI_HOLE_STATIC_IPV4:?:?Please copy template.env to .env and provide provide a value for PI_HOLE_STATIC_IPV4}
      IPv6: ${PI_HOLE_IPV6_ENABLED:-False}
      ServerIPv6: ${PI_HOLE_STATIC_IPV6}
      VIRTUAL_HOST: ${PI_HOLE_DOMAIN:?Please copy template.env to .env and provide provide a value for PI_HOLE_DOMAIN}
      VIRTUAL_PORT: "443"
      PROXY_LOCATION: pihole
    cap_add:
      - NET_ADMIN #optional, neededed only if running pi hole for DHCP
    volumes:
      - "pihole-pihole:/etc/pihole/"
      - "pihole-dnsmasq.d:/etc/dnsmasq.d/"
    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:${PI_HOLE_DOMAIN:?Please copy template.env to .env and provide provide a value for PI_HOLE_DOMAIN}"
      - "traefik.docker.network=pihole"
      - "traefik.default.protocol=http"
      - "com.ouroboros.enable=true"
    networks:
      - pihole
    restart: unless-stopped
    ports: #mapped to host so pi hole can handle DNS queries
      - "53:53/tcp"
      - "53:53/udp"
    expose: #kept internal to network for serving via traefik proxy
      - "80"
      - "443"

networks:
  pihole:

volumes:
  pihole-pihole:
  pihole-dnsmasq.d:

