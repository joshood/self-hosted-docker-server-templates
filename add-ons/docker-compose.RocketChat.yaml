#This adds a Slack-like chat server, Rocket.Chat https://rocket.chat/ to your stack

version: '3.5'

services:
  reverse-proxy:
    networks:
      - rocketchat
  mail-relay:
    networks:
      - rocketchat
  rocketchat:
    image: rocketchat/rocket.chat:latest
    restart: unless-stopped
    container_name: rocketchat
    volumes:
      - rocketchat-uploads:/app/uploads
      - rocketchat-hubot-scripts:/home/hubot/scripts
    environment:
      - PORT=3000
      - ROOT_URL=https://${ROCKETCHAT_DOMAIN:?Please copy template.env to .env and provide provide a value for ROCKETCHAT_DOMAIN}
      - MONGO_URL=mongodb://rocketchat-mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://rocketchat-mongo:27017/local
    depends_on:
      - rocketchat-mongo-init-replica
    expose:
      - "3000"
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:${ROCKETCHAT_DOMAIN:?Please copy template.env to .env and provide provide a value for ROCKETCHAT_DOMAIN}
      - traefik.docker.network=rocketchat
      - traefik.port=3000
      - com.ouroboros.enable=true
    networks:
      - rocketchat
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://rocketchat:3000 || exit 1"] #checking local connectivity
      interval: 1m30s
      timeout: 10s
      retries: 5
      start_period: 30s

  rocketchat-mongo:
    image: mongo:latest
    restart: unless-stopped
    container_name: rocketchat-mongo
    hostname: rocketchat-mongo #needs to be manually defined so init-replica command can find it
    volumes:
      - rocketchat-db:/data/db
      #- ./data/dump:/dump
      - rocketchat-configdb:/data/configdb
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --bind_ip_all
    labels:
      - "traefik.enable=false"
      - "com.ouroboros.enable=true"
    networks:
      - rocketchat
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongo rocketchat-mongo:27017/test --quiet"]
      interval: 1m30s
      timeout: 10s
      retries: 5
      start_period: 10s

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  rocketchat-mongo-init-replica:
    image: mongo:latest
    command: 'mongo rocketchat-mongo/rocketchat --eval "rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''rocketchat-mongo:27017'' } ]})"'
    volumes:
      - rocketchat-db:/data/db
      - rocketchat-configdb:/data/configdb
    labels:
      - "traefik.enable=false"
      - "com.ouroboros.enable=false"
    depends_on:
      - rocketchat-mongo
    networks:
      - rocketchat

networks:
  rocketchat:

volumes:
  rocketchat-db:
  rocketchat-configdb:
  rocketchat-uploads:
  rocketchat-hubot-scripts:
